INSTALL spatial;
LOAD spatial;

SELECT 
    CAST(TRY_CAST(is_fraud AS BIGINT) AS BIGINT) AS TARGET_FRAUDE,
    
    -- CLASSIFICAÇÃO DE RISCO PARA A OCUPAÇÃO DO CLIENTE
job EMPREGO,

           CASE WHEN B.PROPORCAO_FRAUDE <= 29.5 THEN 'BAIXO RISCO'
        WHEN  B.PROPORCAO_FRAUDE <= 42 THEN 'MÉDIO RISCO'
        ELSE 'ALTO RISCO' END AS RISCO_OCUPACAO,

-- CLASSIFICACAO DE RISCO PARA A CATEGORIA DA COMPRA 
        CASE WHEN C.PROPORCAO_FRAUDE <= 5 THEN 'BAIXO RISCO'
        WHEN  C.PROPORCAO_FRAUDE <= 14 THEN 'MÉDIO RISCO'
        ELSE 'ALTO RISCO' END AS RISCO_CATEGORIA,

--CLASSIFICACAO DE RISCO PARA O ESTABELECIMENTO DA COMPRA

        CASE WHEN D.PROPORCAO_FRAUDE <= 20 THEN 'BAIXO RISCO'
        WHEN  D.PROPORCAO_FRAUDE <= 40 THEN 'MÉDIO RISCO'
        ELSE 'ALTO RISCO' END AS RISCO_ESTABELECIMENTO,

--CLASSIFICACAO PARA A CIDADE DO CLIENTE

        CASE WHEN E.PROPORCAO_FRAUDE <= 20 THEN 'BAIXO RISCO'
        WHEN  E.PROPORCAO_FRAUDE <= 50 THEN 'MÉDIO RISCO'
        ELSE 'ALTO RISCO' END AS RISCO_CIDADE,

-- CLASSIFICACAO PARA O ESTADO DO CLIENTE
        CASE WHEN F.PROPORCAO_FRAUDE <= 9.6 THEN 'BAIXO RISCO'
        WHEN  F.PROPORCAO_FRAUDE <= 15.03 THEN 'MÉDIO RISCO'
        ELSE 'ALTO RISCO' END AS RISCO_ESTADO,

    CAST(SUBSTR(trans_date_trans_time, -4, -2) AS BIGINT) AS HORA_DA_TRANSACAO,
    strptime(substr(trans_date_trans_time, 1, 10), '%d-%m-%Y') AS DATA_DA_TRANSACAO,
    ST_DISTANCE(ST_POINT(long,lat),ST_POINT(merch_long,merch_lat)) DISTANCIA,
    city_pop AS POPULACAO_CIDADE, amt as VALOR_TRANSACAO
FROM df_inicial A 
LEFT JOIN df_ocupacao_do_comprador B ON A.job = B.OCUPACAO_DO_CLIENTE
LEFT JOIN df_categoria_da_compra C ON A.category = C.CATEGORIA_DA_COMPRA
LEFT JOIN df_analise_por_estabelecimento D ON A.merchant = D.ESTABELECIMENTO_DA_COMPRA
LEFT JOIN df_analise_por_cidade_do_cliente E ON A.city = E.CIDADE_DO_CLIENTE
LEFT JOIN df_analise_por_estado_do_cliente F ON A.state = F.ESTADO_DO_CLIENTE